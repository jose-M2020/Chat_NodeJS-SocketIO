<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  {{!-- Icons --}}
  <link rel="apple-touch-icon" sizes="180x180" href="./img/icons/apple-touch-icon.png">
  <link rel="icon" type="image/png" sizes="32x32" href="./img/icons/favicon-32x32.png">
  <link rel="icon" type="image/png" sizes="16x16" href="./img/icons/favicon-16x16.png">
  {{!-- <link rel="manifest" href="./img/icons/site.webmanifest"> --}}
  <link rel="mask-icon" href="./img/icons/safari-pinned-tab.svg" color="#5bbad5">
  <meta name="msapplication-TileColor" content="#00aba9">
  <meta name="theme-color" content="#ffffff">
  {{!-- Manifest --}}
  <link rel="manifest" href="./js/manifest.webmanifest">

  <title>Meet me</title>
  {{!-- Google Fonts --}}
  <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
  {{!-- Fontawesome --}}
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css" integrity="sha512-KfkfwYDsLkIlwQp6LFnl8zNdLGxu9YAA1QvwINks4PhcElQSvqcyVLLD9aMhXd13uQjoXtEKNosOWaZqXgel0g==" crossorigin="anonymous" referrerpolicy="no-referrer" />
  {{!-- Bootstrap CSS --}}
  <link rel="stylesheet" type="text/css" href="./css/bootstrap.min.css">
  {{!-- Estilo personalizado --}}
  <link rel="stylesheet" type="text/css" href="./css/style.css">
  {{!-- Animate CSS --}}
  <link
    rel="stylesheet"
    href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css"
  />
  {{!-- JQuery --}}
  <script src="./js/libraries/jquery-3.6.0.min.js"></script>
  {{!-- toastr --}}
  <link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet"/>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
  <script>
    toastr.options = {
		  progressBar: true,
		  preventDuplicates: true
	  }
  </script>
</head>
<body>

    {{>errors}}
    {{>message}}

    {{{body}}}

{{!-- Moment.JS --}}
<script src="/js/libraries/moment.js"></script>
{{!-- Bootstrap.JS --}}
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.bundle.min.js"></script>
{{!-- WOW.JS --}}
<script 
     src="https://cdnjs.cloudflare.com/ajax/libs/wow/1.1.2/wow.min.js" 
     integrity="sha512-Eak/29OTpb36LLo2r47IpVzPBLXnAMPAVypbSZiZ4Qkf8p/7S/XRG5xp7OKWPPYfJT6metI+IORkR5G8F900+g==" 
     crossorigin="anonymous" 
     referrerpolicy="no-referrer">
</script>
<script>
      new WOW().init();
</script>
{{!-- Service worker  --}}
<script src="/js/sw.js" type="module"></script>
<script>
  // --------------- Registrar service worker ----------------
  const PUBLIC_VAPID_KEY = 'BEDHrsNQttbBX0C0Mf_D8arMWZd79v9irUW8xsfUpRaMJ2zVlB5z4WlixlQPZ5UKlA2xP-4bHW5qIZRXFEy6l44';
  //const idUser = $('.profile').attr("data-uid")
  
  window.onload = async () => {
    const user = $('.perfil .perfil__username').text();
    
    if ('serviceWorker' in navigator) {
      try{
        const register  = await navigator.serviceWorker.register('sw.js')
        console.log('Service worker registered: ', register);

        // Listen Push Notifications
        const subscription = await register.pushManager.subscribe({
          userVisibleOnly: true,
          applicationServerKey: urlBase64ToUint8Array(PUBLIC_VAPID_KEY)
        })
        
        // Send Notification        
        await fetch('/subscription', {
          method: 'POST',
          body: JSON.stringify({subscription, user}),
          headers: {
            "Content-Type": "application/json"
          }
        })
      } catch(err) {
        console.log('Service worker not registered: ', err)
      }
    }
  }

  function urlBase64ToUint8Array(base64String) {
    const padding = '='.repeat((4 - base64String.length % 4) % 4);
    const base64 = (base64String + padding)
      .replace(/-/g, '+')
      .replace(/_/g, '/');
  
    const rawData = window.atob(base64);
    const outputArray = new Uint8Array(rawData.length);
  
    for (let i = 0; i < rawData.length; ++i) {
      outputArray[i] = rawData.charCodeAt(i);
    }
    return outputArray;
  }
</script>
</body>
</html>  